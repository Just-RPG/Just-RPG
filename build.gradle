plugins {
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'idea'
    id 'maven-publish'
//    id 'net.neoforged.gradle.userdev' version '7.0.145'
}


group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES' //SCAN, REGISTRYDUMP
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', mod_id
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods { "${mod_id}" { source sourceSets.main } }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', mod_id
            mods { "${mod_id}" { source sourceSets.main } }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', mod_id
            mods { "${mod_id}" { source sourceSets.main } }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods { "${mod_id}" { source sourceSets.main } }
        }
    }
}
// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "Iron's Maven - Release"
        url = "https://code.redspace.io/releases"
    }
    maven { url = "https://maven.enginehub.org/repo/" }
    maven { url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }
    maven { url = "https://maven.theillusivec4.top" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.kosmx.dev/" }
    maven { url = "https://maven.shadowsoffire.dev/releases" }
    maven { url = 'https://modmaven.dev/' }
    maven { url = 'https://maven.tterrag.com/' }
    maven { url = 'https://api.modrinth.com/maven' }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.architectury.dev/" }
    maven { url = "https://maven.puffish.net" }
    maven { url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"}
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("io.redspace.ironsspellbooks:irons_spellbooks:${irons_spells_version}:api")
    runtimeOnly fg.deobf("io.redspace.ironsspellbooks:irons_spellbooks:${irons_spells_version}")
    implementation fg.deobf("io.redspace.ironsspellbooks:irons_spellbooks:${irons_spells_version}")

    // GECKOLIB ***************************************************************************************************
    runtimeOnly fg.deobf("software.bernie.geckolib:geckolib-forge-${geckolib_version}")

    // CAELUS *****************************************************************************************************
    compileOnly fg.deobf("top.theillusivec4.caelus:caelus-forge:${caelus_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.caelus:caelus-forge:${caelus_version}")

    // PLAYER ANIMATOR ********************************************************************************************
    runtimeOnly fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:${player_animator_version}")
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:11.1.136")
    implementation fg.deobf('maven.modrinth:better-combat:1.8.6+1.20.1-forge')

    // CURIOS *****************************************************************************************************
    implementation fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")

    // TETRA ******************************************************************************************************
    //runtimeOnly fg.deobf("se.mickelus.mutil:mutil:${mutil_version}")
    //runtimeOnly fg.deobf("curse.maven:tetra-${tetra_version}")

    // JEI ********************************************************************************************************
    // compile against the JEI API but do not include it at runtime
    compileOnly(fg.deobf("mezz.jei:jei-${jei_mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${jei_mc_version}-forge-api:${jei_version}"))
    // at runtime, use the full JEI jar for Forge
    runtimeOnly(fg.deobf("mezz.jei:jei-${jei_mc_version}-forge:${jei_version}"))

    // PATCHOULI **************************************************************************************************
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    // APOTHEOSIS
    compileOnly fg.deobf("curse.maven:apotheosis-${apotheosis_version}")
    runtimeOnly fg.deobf("curse.maven:apotheosis-${apotheosis_version}")
    runtimeOnly fg.deobf("curse.maven:placebo-${placebo_version}")
    runtimeOnly fg.deobf("curse.maven:apothic-attributes-${attributeslib_version}")

    // FTB *******************************************************************************************************
    runtimeOnly fg.deobf("curse.maven:architectury-api-419699:5137938")
    runtimeOnly fg.deobf("curse.maven:ftb-library-forge-404465:5567591")
    runtimeOnly fg.deobf("curse.maven:ftb-quests-forge-289412:5816794")
    runtimeOnly fg.deobf("curse.maven:ftb-teams-forge-404468:5267190")

    // MEKANISM
    compileOnly "mekanism:Mekanism:${mekanism_version}:api"
    // If you want to test/use Mekanism & its modules during `runClient` invocation, use the following
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")// Mekanism
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:additions")// Mekanism: Additions
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:generators")// Mekanism: Generators
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:tools")// Mekanism: Tools

    // CREATE
    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
    implementation fg.deobf("curse.maven:create-sabers-885375:4784926")

    // DUMMY *****************************************************************************************************
    runtimeOnly fg.deobf("curse.maven:selene-499980:5863085")
    runtimeOnly fg.deobf("curse.maven:mmmmmmmmmmmm-225738:5737040")

    // OTHER *****************************************************************************************************
    runtimeOnly fg.deobf("curse.maven:mouse-tweaks-60089:5338457")
    runtimeOnly fg.deobf("curse.maven:puffish-skills-835091:5865799")
    runtimeOnly fg.deobf("curse.maven:puffish-attributes-991341:5806310")
    implementation fg.deobf("curse.maven:jade-324717:5672013")
    implementation fg.deobf("org.embeddedt:embeddium-1.20.1:0.3.31-beta.53+mc1.20.1")
    implementation fg.deobf("curse.maven:oculus-581495:5299671")

    // JSON ******************************************************************************************************
    implementation "com.google.code.gson:gson:${gson_version}"

}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
                             forge_version       : forge_version, forge_version_range: forge_version_range,
                             loader_version_range: loader_version_range,
                             mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
                             mod_authors         : mod_authors, mod_description: mod_description,]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes(["Specification-Title"     : mod_id,
                    "Specification-Vendor"    : mod_authors,
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : mod_authors,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

mixin {
    add sourceSets.main, 'justrpg.refmap.json'
    config 'justrpg.mixins.json'

    debug.verbose = true
    debug.export = true
}
